import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import com.ibm.websphere.sibx.smobo.*;




/**
 * GENERATED COMMENT - DO NOT MODIFY
 * Variables:  for output terminals - out (com.ibm.wsspi.sibx.mediation.OutputTerminal)
 *             for user properties - <No user properties defined>
 * Inputs:     inputTerminal (com.ibm.wsspi.sibx.mediation.InputTerminal), smo (com.ibm.websphere.sibx.smobo.ServiceMessageObject)
 * Exceptions: com.ibm.wsspi.sibx.mediation.MediationConfigurationException, com.ibm.wsspi.sibx.mediation.MediationBusinessException
 */
 
System.out.println("set WS Addr (All-in-one)...");

/*****************************************/
/*	1) look up ESB Service URL by id	*/
/*****************************************/
System.out.println("1) look up ESB Service URL by id");

DataSource dataSource = null;
InitialContext context = null;
Connection connection = null;

ResultSet resultSet = null;
PreparedStatement preparedStatement = null;

// create SQL query to fetch particular record
String sql = "SELECT service_id, service_url FROM dbo.CL88_ESB_SERVICE where service_id = ?";
String service_id = "001_ESB_Alert";
String service_url = null;

try {
	  	context = new InitialContext();
	  	// Tomcat/Possibly others: java:comp/env/jdbc/myDatasourceJndiName
	  	dataSource = (DataSource) context.lookup("jdbc/OCBS");
	
		// use the connection
		connection = dataSource.getConnection();
	 	 
		// database query
	  	preparedStatement = connection.prepareStatement(sql);
		preparedStatement.setString(1, service_id);
	   
		resultSet = preparedStatement.executeQuery();
		
		System.out.println("==== show result ======");
	
		while( resultSet.next()) {
	        
	        System.out.println("service_id:" + resultSet.getString(1) + ", service_url:" + resultSet.getString(2));
	        
	        service_url = resultSet.getString(2);
	    }
} 
catch (NamingException e) {
    System.out.println("NamingException caught!!!");
    e.printStackTrace();
} 
catch (SQLException e) {
    System.out.println("SQLException caught!!!");
    e.printStackTrace();
} 
finally
{
 	try 
 	{
 		if (null != connection) {
		// cleanup resources, once after processing
		resultSet.close();
		preparedStatement.close();
	
		// and then finally close connection
		connection.close();
		}
 	}
 	catch (SQLException sqlex) {
		sqlex.printStackTrace();
	}
}  

/****************************************/
/*	2) set WS Addressing URL			*/
/****************************************/
SMOHeaderType smoHeaderType = smo.getHeaders().getSMOHeader();

System.out.println("2) set WS Addressing URL");

if (smoHeaderType != null)
{
	TargetAddressType targetAddress = smoHeaderType.getTarget();
	 
	if (targetAddress != null)
	{
	   	System.out.println("before change, targetAddress.getAddress():" + targetAddress.getAddress());
		
		targetAddress.setAddress(service_url);
	} 
  
	System.out.println("after change, targetAddress.getAddress():" + targetAddress.getAddress());
	 
}
 
out.fire(smo); // propagate the service message object to the primitive that is wired to the 'out' terminal


